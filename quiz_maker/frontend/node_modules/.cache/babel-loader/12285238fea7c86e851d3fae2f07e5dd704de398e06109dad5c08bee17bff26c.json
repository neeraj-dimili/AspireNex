{"ast":null,"code":"var _jsxFileName = \"/Users/bhargavd/Desktop/project/quiz_maker/frontend/src/attempt_quiz/Quesion.jsx\";\nimport styles from \"./Question.module.scss\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = props => {\n  const shuffleArray = array => {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  };\n  const options = shuffleArray([...props.rightChoices, ...props.wrongChoices]);\n  const singleType = props.rightChoices.length <= 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [props.question, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"(\", singleType ? 'select only one option' : 'select multiple options', \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.options,\n      children: singleType ? options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: option,\n          value: option,\n          name: props.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 47\n      }, this)) : options.map\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["styles","React","jsxDEV","_jsxDEV","Question","props","shuffleArray","array","i","length","j","Math","floor","random","temp","options","rightChoices","wrongChoices","singleType","className","main","children","question","fileName","_jsxFileName","lineNumber","columnNumber","map","option","type","id","value","name","_c","$RefreshReg$"],"sources":["/Users/bhargavd/Desktop/project/quiz_maker/frontend/src/attempt_quiz/Quesion.jsx"],"sourcesContent":["import styles from \"./Question.module.scss\";\nimport React from \"react\";\n\nconst Question = props => {\n\n    const shuffleArray = array => {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    }\n\n    const options = shuffleArray([...props.rightChoices, ...props.wrongChoices]);\n    const singleType = props.rightChoices.length <= 1;    \n    \n    return <div className={styles.main}>\n        <h1>{props.question} <span>({singleType? 'select only one option': 'select multiple options'})</span></h1>\n        \n        <div className={styles.options}>\n            {singleType?options.map(option => <label key={option}>\n                <input type=\"radio\" id={option} value={option} name={props.question}/>\n                <div>{option}</div>\n            </label>): options.map}\n        </div>\n    </div>\n}\n\nexport default Question;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGC,KAAK,IAAI;EAEtB,MAAMC,YAAY,GAAGC,KAAK,IAAI;IAC1B,KAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACvC,IAAIE,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC3C,IAAIM,IAAI,GAAGP,KAAK,CAACC,CAAC,CAAC;MACnBD,KAAK,CAACC,CAAC,CAAC,GAAGD,KAAK,CAACG,CAAC,CAAC;MACnBH,KAAK,CAACG,CAAC,CAAC,GAAGI,IAAI;IACnB;IACA,OAAOP,KAAK;EAChB,CAAC;EAED,MAAMQ,OAAO,GAAGT,YAAY,CAAC,CAAC,GAAGD,KAAK,CAACW,YAAY,EAAE,GAAGX,KAAK,CAACY,YAAY,CAAC,CAAC;EAC5E,MAAMC,UAAU,GAAGb,KAAK,CAACW,YAAY,CAACP,MAAM,IAAI,CAAC;EAEjD,oBAAON,OAAA;IAAKgB,SAAS,EAAEnB,MAAM,CAACoB,IAAK;IAAAC,QAAA,gBAC/BlB,OAAA;MAAAkB,QAAA,GAAKhB,KAAK,CAACiB,QAAQ,EAAC,GAAC,eAAAnB,OAAA;QAAAkB,QAAA,GAAM,GAAC,EAACH,UAAU,GAAE,wBAAwB,GAAE,yBAAyB,EAAC,GAAC;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1GvB,OAAA;MAAKgB,SAAS,EAAEnB,MAAM,CAACe,OAAQ;MAAAM,QAAA,EAC1BH,UAAU,GAACH,OAAO,CAACY,GAAG,CAACC,MAAM,iBAAIzB,OAAA;QAAAkB,QAAA,gBAC9BlB,OAAA;UAAO0B,IAAI,EAAC,OAAO;UAACC,EAAE,EAAEF,MAAO;UAACG,KAAK,EAAEH,MAAO;UAACI,IAAI,EAAE3B,KAAK,CAACiB;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACtEvB,OAAA;UAAAkB,QAAA,EAAMO;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAFuBE,MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAG7C,CAAC,CAAC,GAAEX,OAAO,CAACY;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AACV,CAAC;AAAAO,EAAA,GAzBK7B,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}