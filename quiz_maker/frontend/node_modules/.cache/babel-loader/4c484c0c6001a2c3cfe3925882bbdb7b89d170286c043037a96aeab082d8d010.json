{"ast":null,"code":"var _jsxFileName = \"/Users/bhargavd/Desktop/project/quiz_maker/frontend/src/post_question/PostQuestions.jsx\",\n  _s = $RefreshSig$();\nimport PostQuestionForm from \"./PostQuestionForm\";\nimport styles from \"./PostQuestions.module.scss\";\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ques = {\n  id: 1,\n  question: \"\",\n  rightChoices: [],\n  wrongChoices: []\n};\nconst PostQuestions = () => {\n  _s();\n  const [noOfQuestions, setNoOfQuestions] = useState(1);\n  const [questions, setQuestions] = useState([]);\n  const questionRef = useRef(null);\n  const addQuestionHandler = () => {\n    setNoOfQuestions(prev => prev + 1);\n    const question = Array.from(questionRef.current.children).filter(child => child.tagName === \"INPUT\")[0].value;\n    const choicesElement = Array.from(questionRef.current.children).filter(child => child.tagName === \"DIV\")[0];\n    const rightOptions = Array.from(choicesElement.children[0].querySelectorAll('input')).map(i => i.value);\n    const wrongOptions = Array.from(choicesElement.children[1].querySelectorAll('input')).map(i => i.value);\n    setQuestions(prev => [...prev, {\n      id: prev.length + 1,\n      question: questionElement\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bar,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Post Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addQuestionHandler,\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), Array(noOfQuestions).fill(\"\").map((a, idx) => /*#__PURE__*/_jsxDEV(PostQuestionForm, {\n      id: idx,\n      ref: questionRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 56\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this);\n};\n_s(PostQuestions, \"wEJpVhK1DXXsgDymNVu+dlC77uw=\");\n_c = PostQuestions;\nexport default PostQuestions;\nvar _c;\n$RefreshReg$(_c, \"PostQuestions\");","map":{"version":3,"names":["PostQuestionForm","styles","useState","useRef","jsxDEV","_jsxDEV","ques","id","question","rightChoices","wrongChoices","PostQuestions","_s","noOfQuestions","setNoOfQuestions","questions","setQuestions","questionRef","addQuestionHandler","prev","Array","from","current","children","filter","child","tagName","value","choicesElement","rightOptions","querySelectorAll","map","i","wrongOptions","length","questionElement","className","main","bar","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","a","idx","ref","_c","$RefreshReg$"],"sources":["/Users/bhargavd/Desktop/project/quiz_maker/frontend/src/post_question/PostQuestions.jsx"],"sourcesContent":["import PostQuestionForm from \"./PostQuestionForm\";\nimport styles from \"./PostQuestions.module.scss\";\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\n\nconst ques = {\n    id: 1,\n    question: \"\",\n    rightChoices: [],\n    wrongChoices: []\n}\n\nconst PostQuestions = () => {\n\n    const [noOfQuestions, setNoOfQuestions] = useState(1);\n    const [questions, setQuestions] = useState([]);\n    const questionRef = useRef(null);\n\n    const addQuestionHandler = () => {\n        setNoOfQuestions(prev => prev + 1);\n        const question = Array.from(questionRef.current.children).filter(child => child.tagName === \"INPUT\")[0].value;\n        const choicesElement = Array.from(questionRef.current.children).filter(child => child.tagName === \"DIV\")[0];\n        const rightOptions = Array.from(choicesElement.children[0].querySelectorAll('input')).map(i => i.value);\n        const wrongOptions = Array.from(choicesElement.children[1].querySelectorAll('input')).map(i => i.value);\n\n        setQuestions(prev => [...prev, {id: prev.length + 1, question: questionElement}])\n    }\n\n    return <div className={styles.main}>\n        <div className={styles.bar}>\n            <div>Post Questions</div>\n            <button onClick={addQuestionHandler}>Add Question</button>\n        </div>\n\n        {Array(noOfQuestions).fill(\"\").map((a, idx) => < PostQuestionForm id={idx} ref={questionRef}/>)}\n\n        <button>post</button>\n    </div >\n}\n\nexport default PostQuestions;\n"],"mappings":";;AAAA,OAAOA,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,IAAI,GAAG;EACTC,EAAE,EAAE,CAAC;EACLC,QAAQ,EAAE,EAAE;EACZC,YAAY,EAAE,EAAE;EAChBC,YAAY,EAAE;AAClB,CAAC;AAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMe,WAAW,GAAGd,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAMe,kBAAkB,GAAGA,CAAA,KAAM;IAC7BJ,gBAAgB,CAACK,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAClC,MAAMX,QAAQ,GAAGY,KAAK,CAACC,IAAI,CAACJ,WAAW,CAACK,OAAO,CAACC,QAAQ,CAAC,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK;IAC7G,MAAMC,cAAc,GAAGR,KAAK,CAACC,IAAI,CAACJ,WAAW,CAACK,OAAO,CAACC,QAAQ,CAAC,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3G,MAAMG,YAAY,GAAGT,KAAK,CAACC,IAAI,CAACO,cAAc,CAACL,QAAQ,CAAC,CAAC,CAAC,CAACO,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACL,KAAK,CAAC;IACvG,MAAMM,YAAY,GAAGb,KAAK,CAACC,IAAI,CAACO,cAAc,CAACL,QAAQ,CAAC,CAAC,CAAC,CAACO,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACL,KAAK,CAAC;IAEvGX,YAAY,CAACG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAACZ,EAAE,EAAEY,IAAI,CAACe,MAAM,GAAG,CAAC;MAAE1B,QAAQ,EAAE2B;IAAe,CAAC,CAAC,CAAC;EACrF,CAAC;EAED,oBAAO9B,OAAA;IAAK+B,SAAS,EAAEnC,MAAM,CAACoC,IAAK;IAAAd,QAAA,gBAC/BlB,OAAA;MAAK+B,SAAS,EAAEnC,MAAM,CAACqC,GAAI;MAAAf,QAAA,gBACvBlB,OAAA;QAAAkB,QAAA,EAAK;MAAc;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBrC,OAAA;QAAQsC,OAAO,EAAEzB,kBAAmB;QAAAK,QAAA,EAAC;MAAY;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,EAELtB,KAAK,CAACP,aAAa,CAAC,CAAC+B,IAAI,CAAC,EAAE,CAAC,CAACb,GAAG,CAAC,CAACc,CAAC,EAAEC,GAAG,kBAAKzC,OAAA,CAAEL,gBAAgB;MAACO,EAAE,EAAEuC,GAAI;MAACC,GAAG,EAAE9B;IAAY;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,CAAC,eAE/FrC,OAAA;MAAAkB,QAAA,EAAQ;IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AACX,CAAC;AAAA9B,EAAA,CA1BKD,aAAa;AAAAqC,EAAA,GAAbrC,aAAa;AA4BnB,eAAeA,aAAa;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}