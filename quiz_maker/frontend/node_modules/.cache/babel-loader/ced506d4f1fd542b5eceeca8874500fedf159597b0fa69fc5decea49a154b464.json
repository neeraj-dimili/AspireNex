{"ast":null,"code":"var _jsxFileName = \"/Users/bhargavd/Desktop/project/quiz_maker/frontend/src/attempt_quiz/Questions.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./Questions.module.scss\";\nimport questions from \"../questions.json\";\nimport Question from \"./Quesion\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questions = () => {\n  _s();\n  const questionsRef = useRef(null);\n  const submitHandler = () => {\n    var marks = [];\n    var attemptedCorrectChoices = [];\n    const resultsAns = Array.from(Array.from(questionsRef.current.children).filter(child => child.className.includes('main')).map(result => result.children[1]));\n    resultsAns.forEach(res => {\n      var answers = [];\n      Array.from(res.children).forEach(choice => {\n        if (choice.children[0].checked) {\n          answers;\n        }\n        console.log(choice.children[0]);\n        console.log(choice.children[0].checked);\n        console.log(choice.children[1]);\n      });\n    });\n\n    // for(var i=0; i<results.length; i++){\n    //     const attemptedCorrectChoices = results[i].rightChoices;\n    //     const expectedCorrectChoices = questions[i].rightChoices;\n\n    //     if(attemptedCorrectChoices.length != expectedCorrectChoices.length) marks[results[i].question] = 0;\n\n    // }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main,\n    ref: questionsRef,\n    children: [questions.map(question => /*#__PURE__*/_jsxDEV(Question, {\n      question: question.question,\n      rightChoices: question.rightChoices,\n      wrongChoices: question.wrongChoices\n    }, question.question, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 36\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitHandler,\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n};\n_s(Questions, \"eLIF8z8xRrNNsY8UH1riGhAwJ78=\");\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["styles","questions","Question","useRef","jsxDEV","_jsxDEV","Questions","_s","questionsRef","submitHandler","marks","attemptedCorrectChoices","resultsAns","Array","from","current","children","filter","child","className","includes","map","result","forEach","res","answers","choice","checked","console","log","main","ref","question","rightChoices","wrongChoices","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/bhargavd/Desktop/project/quiz_maker/frontend/src/attempt_quiz/Questions.jsx"],"sourcesContent":["import styles from \"./Questions.module.scss\";\nimport questions from \"../questions.json\";\nimport Question from \"./Quesion\";\nimport { useRef } from \"react\";\n\n\nconst Questions = () => {\n\n    const questionsRef = useRef(null);\n\n    const submitHandler = () => {\n        var marks = []\n        var attemptedCorrectChoices = [];\n        const resultsAns = Array.from(Array.from(questionsRef.current.children).filter(child => child.className.includes('main')).map(result => result.children[1]));\n        resultsAns.forEach(res => {\n            var answers = [];\n            Array.from(res.children).forEach(choice => {\n                if(choice.children[0].checked){\n                    answers\n                }\n                console.log(choice.children[0]);\n                console.log(choice.children[0].checked);\n                console.log(choice.children[1]);\n            });\n        })        \n\n        \n        // for(var i=0; i<results.length; i++){\n        //     const attemptedCorrectChoices = results[i].rightChoices;\n        //     const expectedCorrectChoices = questions[i].rightChoices;\n\n        //     if(attemptedCorrectChoices.length != expectedCorrectChoices.length) marks[results[i].question] = 0;\n\n        // }\n    }\n\n\n    return <div className={styles.main} ref={questionsRef}>\n        {questions.map(question => <Question key={question.question} question={question.question} rightChoices={question.rightChoices} wrongChoices={question.wrongChoices}/>)}\n        <button onClick={submitHandler}>submit</button>\n    </div>\n}\n\nexport default Questions;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAMC,YAAY,GAAGL,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAMM,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIC,KAAK,GAAG,EAAE;IACd,IAAIC,uBAAuB,GAAG,EAAE;IAChC,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAACD,KAAK,CAACC,IAAI,CAACN,YAAY,CAACO,OAAO,CAACC,QAAQ,CAAC,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAACC,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5JJ,UAAU,CAACW,OAAO,CAACC,GAAG,IAAI;MACtB,IAAIC,OAAO,GAAG,EAAE;MAChBZ,KAAK,CAACC,IAAI,CAACU,GAAG,CAACR,QAAQ,CAAC,CAACO,OAAO,CAACG,MAAM,IAAI;QACvC,IAAGA,MAAM,CAACV,QAAQ,CAAC,CAAC,CAAC,CAACW,OAAO,EAAC;UAC1BF,OAAO;QACX;QACAG,OAAO,CAACC,GAAG,CAACH,MAAM,CAACV,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/BY,OAAO,CAACC,GAAG,CAACH,MAAM,CAACV,QAAQ,CAAC,CAAC,CAAC,CAACW,OAAO,CAAC;QACvCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAACV,QAAQ,CAAC,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC;IACN,CAAC,CAAC;;IAGF;IACA;IACA;;IAEA;;IAEA;EACJ,CAAC;EAGD,oBAAOX,OAAA;IAAKc,SAAS,EAAEnB,MAAM,CAAC8B,IAAK;IAACC,GAAG,EAAEvB,YAAa;IAAAQ,QAAA,GACjDf,SAAS,CAACoB,GAAG,CAACW,QAAQ,iBAAI3B,OAAA,CAACH,QAAQ;MAAyB8B,QAAQ,EAAEA,QAAQ,CAACA,QAAS;MAACC,YAAY,EAAED,QAAQ,CAACC,YAAa;MAACC,YAAY,EAAEF,QAAQ,CAACE;IAAa,GAAzHF,QAAQ,CAACA,QAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAyG,CAAC,CAAC,eACtKjC,OAAA;MAAQkC,OAAO,EAAE9B,aAAc;MAAAO,QAAA,EAAC;IAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AACV,CAAC;AAAA/B,EAAA,CAnCKD,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}